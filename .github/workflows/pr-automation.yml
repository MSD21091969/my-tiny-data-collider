name: PR Auto-Actions

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  pull_request_review:
    types: [submitted]

jobs:
  auto-assign-reviewers:
    name: Auto-assign Reviewers
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
      - name: Auto-assign reviewers
        uses: actions/github-script@v6
        with:
          script: |
            const reviewers = ['MSD21091969']; // Add team members
            
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: reviewers
            });

  auto-label-pr:
    name: Auto-label PR
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    
    steps:
      - name: Auto-label based on files
        uses: actions/github-script@v6
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            
            const labels = [];
            
            // Check file patterns and add labels
            const hasTests = files.some(file => file.filename.includes('test'));
            const hasDocs = files.some(file => file.filename.includes('.md'));
            const hasRegistry = files.some(file => file.filename.includes('config/'));
            const hasWorkflow = files.some(file => file.filename.includes('.github/'));
            
            if (hasTests) labels.push('tests');
            if (hasDocs) labels.push('documentation');
            if (hasRegistry) labels.push('registry');
            if (hasWorkflow) labels.push('ci/cd');
            
            // Size labels
            const additions = files.reduce((sum, file) => sum + file.additions, 0);
            if (additions < 10) labels.push('size/XS');
            else if (additions < 50) labels.push('size/S');
            else if (additions < 200) labels.push('size/M');
            else if (additions < 500) labels.push('size/L');
            else labels.push('size/XL');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: labels
              });
            }

  auto-merge-check:
    name: Check Auto-merge Eligibility
    runs-on: ubuntu-latest
    if: github.event.review && github.event.review.state == 'approved'
    
    steps:
      - name: Enable auto-merge if eligible
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // Check if PR has required approvals
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });
            
            const approvals = reviews.filter(review => review.state === 'APPROVED').length;
            const requiredApprovals = pr.base.ref === 'main' ? 1 : 1;
            
            if (approvals >= requiredApprovals && !pr.draft) {
              await github.rest.pulls.enableAutoMerge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: pr.base.ref === 'main' ? 'squash' : 'merge'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '🤖 Auto-merge enabled! This PR will merge automatically once all status checks pass.'
              });
            }

  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    
    steps:
      - name: Check PR size
        uses: actions/github-script@v6
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            
            const additions = files.reduce((sum, file) => sum + file.additions, 0);
            const deletions = files.reduce((sum, file) => sum + file.deletions, 0);
            const changes = additions + deletions;
            
            let message = '';
            
            if (changes > 1000) {
              message = `⚠️ **Large PR Warning**: This PR has ${changes} lines changed. Consider breaking it into smaller PRs for easier review.`;
            } else if (changes > 500) {
              message = `📏 **Medium PR**: This PR has ${changes} lines changed. Please ensure good test coverage.`;
            } else if (changes > 100) {
              message = `✅ **Good size PR**: This PR has ${changes} lines changed.`;
            }
            
            if (message) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
            }