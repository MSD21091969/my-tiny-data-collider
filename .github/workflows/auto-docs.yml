name: Auto-Generate Documentation

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'config/tools/**/*.yaml'
      - 'src/pydantic_ai_integration/tools/generated/**'
  pull_request:
    paths:
      - 'config/tools/**/*.yaml'

jobs:
  generate-tool-catalog:
    name: Generate Tool Catalog
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jinja2
      
      - name: Generate tool catalog
        run: |
          python scripts/generate_tool_docs.py
      
      - name: Check for documentation changes
        id: doc-changes
        run: |
          if git diff --name-only | grep -E 'docs/TOOL_CATALOG.md'; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit documentation updates
        if: steps.doc-changes.outputs.changes == 'true' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/TOOL_CATALOG.md
          git commit -m "docs: auto-update tool catalog from YAML specs [skip ci]"
          git push
      
      - name: Comment on PR with catalog preview
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const catalog = fs.readFileSync('docs/TOOL_CATALOG.md', 'utf8');
            
            const comment = `## üìö Tool Catalog Preview
            
            <details>
            <summary>Click to view auto-generated tool documentation</summary>
            
            ${catalog}
            
            </details>
            
            This will be auto-committed when merged to \`develop\`.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  validate-tool-docs:
    name: Validate Tool Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check documentation exists for tools
        run: |
          python -c "
          import yaml
          from pathlib import Path
          
          tools_with_docs = []
          tools_without_docs = []
          
          for yaml_file in Path('config/tools').glob('*.yaml'):
              tool_name = yaml_file.stem
              
              # Check if feature-specific docs exist
              if tool_name.startswith('gmail'):
                  doc_file = Path('docs/GMAIL_TOOLS.md')
              elif tool_name.startswith('drive'):
                  doc_file = Path('docs/DRIVE_TOOLS.md')
              elif tool_name.startswith('sheets'):
                  doc_file = Path('docs/SHEETS_TOOLS.md')
              else:
                  # Generic tools don't require specific docs
                  continue
              
              if doc_file.exists():
                  tools_with_docs.append(tool_name)
              else:
                  tools_without_docs.append(tool_name)
          
          if tools_without_docs:
              print('‚ö†Ô∏è  Tools without documentation:')
              for tool in tools_without_docs:
                  print(f'  - {tool}')
              print('\nConsider adding feature-specific documentation.')
          
          if tools_with_docs:
              print(f'‚úÖ {len(tools_with_docs)} tools have documentation')
          "
