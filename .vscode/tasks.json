{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Get My Extended Toolset",
			"type": "shell",
			"command": "git",
			"args": [
				"clone",
				"--recursive",
				"https://github.com/MSD21091969/my-tiny-toolset.git",
				"TINYTOOLSET"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Update Toolset Submodules",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"cd TINYTOOLSET; git submodule update --remote --recursive"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Setup Tool Outputs",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"New-Item -ItemType Directory -Force -Path 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\docs'; New-Item -ItemType Directory -Force -Path 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\analysis'; New-Item -ItemType Directory -Force -Path 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\mappings'; New-Item -ItemType Directory -Force -Path 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\excel'; Copy-Item -Path 'C:\\Users\\HP\\my-tiny-toolset\\*.md' -Destination 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\docs\\' -Force -ErrorAction SilentlyContinue"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Quick Analysis (Direct)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"python 'C:\\Users\\HP\\my-tiny-toolset\\TOOLSET\\code_analyzer.py' . --csv --json --output-dir 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\analysis'; if (Test-Path '.\\analysis_*.json') { Move-Item '.\\analysis_*.json' 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\analysis\\' }"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Model Mapping (Direct)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'Note: mapping_analyzer has 431 lines of useful code but missing main() - NEEDS REPLACEMENT with proper CLI interface'"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Excel Export (Direct)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"python 'C:\\Users\\HP\\my-tiny-toolset\\TOOLSET\\excel_exporter.py' . --output-dir 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\excel'; if (Test-Path '.\\code_analysis_*.xlsx') { Move-Item '.\\code_analysis_*.xlsx' 'C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\excel\\' }"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Health Check Toolset",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
$broken = (cd 'C:\Users\HP\my-tiny-toolset'; git submodule status | Select-String '^-'); if ($broken) { Write-Host 'Fixing broken submodules...'; git submodule update --init --recursive } else { Write-Host 'Toolset healthy ✓' }; Write-Host 'Personal Notes:'; if (Test-Path 'C:\Users\HP\Desktop\krabbel\tool-outputs\docs\personal\MY_FIELD_NOTES.md') { Write-Host 'Available ✓' } else { Write-Host 'Missing - create personal notes' }
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Lab Status Check",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-File",
				"C:\\Users\\HP\\my-tiny-toolset\\manage-lab.ps1",
				"-Status"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Load AI Context",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$context = Read-Host 'Context to load (prompts/schemas/templates/examples/all)'; & 'C:\\Users\\HP\\my-tiny-toolset\\manage-lab.ps1' -Context $context"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Setup Conceptual Lab",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-File",
				"C:\\Users\\HP\\my-tiny-toolset\\setup-lab.ps1",
				"-QuickCheck"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Version Tracking (Direct)",
			"type": "shell",
			"command": "python",
			"args": [
				"C:\\Users\\HP\\my-tiny-toolset\\TOOLSET\\version_tracker.py",
				".",
				"--json",
				"--output-dir",
				"C:\\Users\\HP\\Desktop\\krabbel\\tool-outputs\\analysis"
			],
			"group": "build",
			"problemMatcher": []
		},




		{
			"label": "Complete Toolset Setup",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Setup Tool Outputs",
				"Quick Analysis (Direct)",
				"Model Mapping (Direct)", 
				"Excel Export (Direct)",
				"Version Tracking (Direct)"
			],
			"group": "build"
		},
		{
			"label": "Create Feature Branch",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$branch = Read-Host 'Enter feature branch name (feature/your-name)'; git checkout -b $branch"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Switch to Develop",
			"type": "shell",
			"command": "git",
			"args": ["checkout", "feature/develop"],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Switch to Main",
			"type": "shell",
			"command": "git",
			"args": ["checkout", "main"],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Pull Latest Changes",
			"type": "shell",
			"command": "git",
			"args": ["pull", "origin", "HEAD"],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Sync with Develop",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"git fetch origin; git merge origin/develop"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Validate Before PR",
			"type": "shell",
			"command": "python",
			"args": [
				"scripts/validate_registries.py",
				"--strict",
				"--verbose"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Run All Tests",
			"type": "shell",
			"command": "python",
			"args": [
				"-m",
				"pytest",
				"tests/",
				"-v",
				"--tb=short"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Create Pull Request",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$title = Read-Host 'Enter PR title'; $body = Read-Host 'Enter PR description'; gh pr create --title \"$title\" --body \"$body\" --base develop"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Check PR Status",
			"type": "shell",
			"command": "gh",
			"args": ["pr", "status"],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Merge Current PR",
			"type": "shell",
			"command": "gh",
			"args": ["pr", "merge", "--squash", "--delete-branch"],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Resolve Merge Conflicts",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'Opening merge tool...'; git mergetool; Write-Host 'After resolving conflicts, run: git add . && git commit'"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Pre-commit Checks",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Validate Before PR",
				"Run All Tests"
			],
			"group": "test"
		},
		{
			"label": "Full PR Workflow",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Sync with Develop",
				"Pre-commit Checks",
				"Create Pull Request"
			],
			"group": "build"
		}
	],
	"inputs": [
		{
			"id": "version",
			"type": "promptString",
			"description": "Enter version number",
			"default": "1.0.0"
		}
	]
}
