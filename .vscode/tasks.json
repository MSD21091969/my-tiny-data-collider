{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Quick Analysis",
			"type": "shell",
			"command": "python",
			"args": [
				"${env:MY_TOOLSET}\\code_analyzer.py",
				".",
				"--json",
				"--csv"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Full Analysis",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$v = '${input:versionNumber}'; python \"$env:MY_TOOLSET\\version_tracker.py\" . --version $v --json --yaml; python \"$env:MY_TOOLSET\\mapping_analyzer.py\" . --html; Write-Host 'âœ“ Done. Check .tool-outputs/' -ForegroundColor Green"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Open Dashboard",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"if (Test-Path '.tool-outputs/mappings/mapping_dashboard.html') { Start-Process '.tool-outputs/mappings/mapping_dashboard.html' } else { Write-Host 'Run Full Analysis first' -ForegroundColor Yellow }"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Validate Registries",
			"type": "shell",
			"command": "python",
			"args": [
				"scripts/validate_registries.py",
				"--strict",
				"--verbose"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Run Tests",
			"type": "shell",
			"command": "python",
			"args": [
				"-m",
				"pytest",
				"tests/",
				"-v"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Pre-commit Checks",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Validate Registries",
				"Run Tests"
			],
			"group": "test"
		}
	],
	"inputs": [
		{
			"id": "versionNumber",
			"type": "promptString",
			"description": "Version (e.g., 1.0.0, PR-123, baseline)",
			"default": "current"
		}
	]
}

