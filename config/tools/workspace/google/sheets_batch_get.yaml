name: sheets_batch_get
display_name: Sheets Batch Get
description: "Retrieve values from multiple ranges within a Google Sheets spreadsheet"
version: "1.0.0"
category: google_workspace
tags:
  - sheets
  - spreadsheet
  - google_workspace
  - data

parameters:
  - name: spreadsheet_id
    type: string
    description: "The ID of the spreadsheet to retrieve data from"
    required: true
    min_length: 1
    
  - name: ranges
    type: array
    description: "List of A1 notation ranges to retrieve (e.g. ['Sheet1!A1:B2', 'Sheet2!C3:D4'])"
    required: true

business_rules:
  enabled: true
  requires_auth: true
  required_permissions: ["sheets.readonly"]
  requires_casefile: false
  timeout_seconds: 30

session_policies:
  requires_active_session: true
  allow_new_session: false
  allow_session_resume: true
  session_event_type: "sheets_read"
  log_request_payload: true
  log_full_response: false

casefile_policies:
  requires_casefile: false
  allowed_casefile_states: ["active"]
  create_if_missing: false
  enforce_access_control: true
  audit_casefile_changes: true

audit_events:
  success_event: "sheets_batch_get_success"
  failure_event: "sheets_batch_get_failure"
  log_response_fields: ["spreadsheet_id", "range_count"]
  redact_fields: []
  emit_casefile_event: true

implementation:
  type: api_call
  api_call:
    client_module: "src.pydantic_ai_integration.integrations.google_workspace.clients"
    client_class: SheetsClient
    method_name: batch_get
    request_type: SheetsBatchGetRequest

returns:
  type: object
  description: "Spreadsheet data with requested ranges"
  properties:
    spreadsheet:
      type: object
      description: "SheetData containing spreadsheet metadata and range values"

examples:
  - description: "Get data from multiple ranges"
    context:
      session:
        user_id: "test_user"
        session_id: "test_session"
      permissions: ["sheets.readonly"]
    input:
      spreadsheet_id: "1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms"
      ranges: ["Sheet1!A1:B2", "Sheet1!C3:D4"]
    expected_output:
      spreadsheet:
        spreadsheet_id: "1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms"
        title: "Mock Spreadsheet"

error_scenarios:
  - description: "Missing spreadsheet_id"
    input:
      spreadsheet_id: ""
      ranges: ["Sheet1!A1:B2"]
    expected_error:
      type: "ValidationError"
      message: "spreadsheet_id is required"
      
  - description: "Empty ranges list"
    input:
      spreadsheet_id: "test_id"
      ranges: []
    expected_error:
      type: "ValidationError"
      message: "ranges cannot be empty"
