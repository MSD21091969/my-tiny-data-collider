# Echo Tool - Simple example for testing tool factory
name: echo_tool
display_name: "Echo Tool"
description: "Echoes input message back with metadata"
category: examples
version: "1.0.0"
tags:
  - example
  - testing
  - echo

# Business rules
business_rules:
  enabled: true
  requires_auth: true
  required_permissions:
    - tools:execute
  requires_casefile: false
  timeout_seconds: 10
  max_retries: 0

# Session policies ensure the audit trail captures whether the request creates or resumes sessions
session_policies:
  requires_active_session: true
  allow_new_session: false
  allow_session_resume: true
  session_event_type: request
  log_request_payload: true
  log_full_response: true

# Casefile policies describe how this tool interacts with user/casefile rules
casefile_policies:
  requires_casefile: false
  allowed_casefile_states:
    - active
  create_if_missing: false
  enforce_access_control: true
  audit_casefile_changes: true

# Parameters
parameters:
  - name: message
    type: string
    required: true
    min_length: 1
    max_length: 500
    description: "Message to echo back"
    
  - name: repeat_count
    type: integer
    required: false
    default: 1
    min_value: 1
    max_value: 10
    description: "Number of times to repeat the message"

# Implementation
implementation:
  template: simple  # legacy field for v1 compatibility
  type: simple
  stores_in_casefile: false
  simple:
    logic: |
      echoed_messages = [message for _ in range(repeat_count)]
      total_length = sum(len(msg) for msg in echoed_messages)
      result = {
        "original_message": message,
        "repeat_count": repeat_count,
        "echoed_messages": echoed_messages,
        "total_length": total_length,
      }

# Return contract aligns with audit/event payloads
returns:
  type: object
  description: "Echo results including each repeated message and aggregate length."
  required:
    - original_message
    - repeat_count
    - echoed_messages
    - total_length
  properties:
    original_message:
      type: string
      description: "The input message provided by the caller."
    repeat_count:
      type: integer
      description: "Number of times the message was repeated."
    echoed_messages:
      type: array
      description: "List of echoed messages in order."
      items:
        type: string
    total_length:
      type: integer
      description: "Total number of characters across all echoed messages."

# Examples drive behavior tests and audit validation
examples:
  - description: "Echo once"
    context:
      session:
        user_id: "user_demo"
        session_id: "session_demo"
      permissions:
        - tools:execute
    input:
      message: "hello"
      repeat_count: 1
    expected_output:
      original_message: "hello"
      repeat_count: 1
      echoed_messages:
        - "hello"
      total_length: 5
    expect_casefile_changes: false
  - description: "Echo multiple times"
    context:
      session:
        user_id: "user_demo"
        session_id: "session_repeat"
      permissions:
        - tools:execute
    input:
      message: "test"
      repeat_count: 3
    expected_output:
      original_message: "test"
      repeat_count: 3
      echoed_messages:
        - "test"
        - "test"
        - "test"
      total_length: 12
    expect_casefile_changes: false

# Negative scenarios support audit of rejected requests
error_scenarios:
  - description: "Repeat count too high"
    input:
      message: "fail"
      repeat_count: 100
    expected_error:
      type: ValidationError
      message: "ensure this value is less than or equal to 10"

# Audit event configuration keeps logs consistent across success/failure
audit_events:
  success_event: tool_success
  failure_event: tool_failure
  log_response_fields:
    - original_message
    - repeat_count
    - total_length
  redact_fields: []
  emit_casefile_event: false
