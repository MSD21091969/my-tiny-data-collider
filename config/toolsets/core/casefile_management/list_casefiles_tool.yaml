# List Casefiles Tool Definition
# Generated from methods_inventory_v1.yaml
# Method: CasefileService.list_casefiles

name: list_casefiles_tool
display_name: List Casefiles
description: List casefiles with optional filters for owner, tags, and state
category: workspace
version: "1.0.0"
tags:
  - casefile
  - crud
  - workspace
  - search
  - list

metadata:
  source_method: list_casefiles
  service: CasefileService
  generated_from: methods_inventory_v1.yaml

classification:
  domain: workspace
  subdomain: casefile
  capability: search
  complexity: atomic
  maturity: stable
  integration_tier: internal

business_rules:
  enabled: true
  requires_auth: true
  required_permissions:
    - casefiles:read
  timeout_seconds: 30
  visibility: public

session_policies:
  requires_active_session: true
  allow_new_session: false
  allow_session_resume: true
  session_event_type: request
  log_request_payload: true
  log_full_response: false

casefile_policies:
  requires_casefile: false
  allowed_casefile_states:
    - active
    - archived
  create_if_missing: false
  enforce_access_control: true
  audit_casefile_changes: false

parameters:
  - name: owner_user_id
    type: string
    description: Filter by owner user ID (defaults to current user)
    required: false
    examples:
      - "user_123"

  - name: tags
    type: array
    description: Filter by tags (returns casefiles with any of these tags)
    required: false
    items:
      type: string
    max_length: 10
    examples:
      - ["urgent", "customer-support"]
      - ["legal"]

  - name: state
    type: string
    description: Filter by casefile state
    required: false
    examples:
      - "active"
      - "archived"

  - name: limit
    type: integer
    description: Maximum number of results to return
    required: false
    min_value: 1
    max_value: 100
    default: 20
    examples:
      - 10
      - 50

  - name: offset
    type: integer
    description: Number of results to skip (for pagination)
    required: false
    min_value: 0
    default: 0
    examples:
      - 0
      - 20

implementation:
  type: api_call
  api_call:
    service_class: CasefileService
    module_path: src.casefileservice.service
    method_name: list_casefiles
    request_model: ListCasefilesRequest
    response_model: ListCasefilesResponse
    models_module: src.pydantic_models.operations.casefile_ops
    
    request_mapping:
      owner_user_id: "{{ owner_user_id }}"
      tags: "{{ tags }}"
      state: "{{ state }}"
      limit: "{{ limit }}"
      offset: "{{ offset }}"
    
    response_mapping: |
      # Extract list of casefiles
      casefiles = []
      for cf in response.payload.casefiles:
          casefiles.append({
              "casefile_id": cf.casefile_id,
              "title": cf.title,
              "description": cf.description,
              "tags": cf.tags,
              "owner_user_id": cf.owner_user_id,
              "created_at": cf.created_at.isoformat() if cf.created_at else None,
              "updated_at": cf.updated_at.isoformat() if cf.updated_at else None,
              "state": cf.state
          })
      
      result = {
          "casefiles": casefiles,
          "total_count": response.payload.total_count,
          "limit": response.payload.limit,
          "offset": response.payload.offset,
          "status": response.status.value,
          "execution_time_ms": response.metadata.get("execution_time_ms")
      }
    
    retry_policy:
      max_attempts: 2
      backoff_seconds: 1.0

returns:
  type: object
  description: Paginated list of casefiles
  properties:
    casefiles:
      type: array
      description: Array of casefile objects
      items:
        type: object
        properties:
          casefile_id:
            type: string
          title:
            type: string
          description:
            type: string
          tags:
            type: array
            items:
              type: string
          owner_user_id:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
          state:
            type: string
    total_count:
      type: integer
      description: Total number of matching casefiles
    limit:
      type: integer
      description: Maximum results per page
    offset:
      type: integer
      description: Number of results skipped
    status:
      type: string
      description: Request execution status
    execution_time_ms:
      type: number
      description: Execution time in milliseconds
  required:
    - casefiles
    - total_count
    - status

audit_events:
  success_event: casefiles_listed
  failure_event: casefiles_list_failed
  log_response_fields:
    - total_count
    - limit
    - offset
  redact_fields: []
  emit_casefile_event: false

examples:
  - description: List all casefiles for current user
    context:
      session:
        user_id: user_123
        session_id: session_456
      permissions:
        - casefiles:read
    input: {}
    expected_output:
      total_count: 5
      limit: 20
      offset: 0
      status: "COMPLETED"
    expect_casefile_changes: false

  - description: List casefiles with tag filter
    context:
      session:
        user_id: user_123
        session_id: session_456
      permissions:
        - casefiles:read
    input:
      tags:
        - urgent
      limit: 10
    expected_output:
      total_count: 2
      limit: 10
      offset: 0
      status: "COMPLETED"
    expect_casefile_changes: false

  - description: Paginated query
    context:
      session:
        user_id: user_123
        session_id: session_456
      permissions:
        - casefiles:read
    input:
      limit: 5
      offset: 10
    expected_output:
      total_count: 25
      limit: 5
      offset: 10
      status: "COMPLETED"
    expect_casefile_changes: false

error_scenarios:
  - description: Missing read permission
    input: {}
    expected_error:
      type: PermissionError
      message: "User lacks required permission: casefiles:read"

  - description: Invalid limit value
    input:
      limit: 1000
    expected_error:
      type: ValidationError
      message: "limit must be at most 100"

documentation:
  summary: |
    Lists casefiles accessible to the current user with optional filtering by
    owner, tags, and state. Results are paginated using limit/offset parameters.
    
    Required permission: casefiles:read
    
    By default, returns active casefiles owned by or shared with the current user.
    The total_count field reflects all matching casefiles (not just the current page).
    
    Pagination example:
    - Page 1: offset=0, limit=20
    - Page 2: offset=20, limit=20
    - Page 3: offset=40, limit=20
  
  changelog:
    - version: "1.0.0"
      date: "2025-10-06"
      notes: "Initial stable release, mapped to CasefileService.list_casefiles"
