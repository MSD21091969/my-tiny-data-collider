name: request_hub_create_casefile_with_session
display_name: RequestHub â€¢ Casefile + Session
description: Composite RequestHub workflow that creates a casefile and optionally boots a tool session with hook telemetry.
category: workspace
version: "0.1.0"
tags:
  - request-hub
  - casefile
  - tool-session
  - composite

metadata:
  source_method: execute_casefile_with_session
  service: RequestHubService
  generated_from: methods_inventory_v1.yaml
  policy_pattern: tool_session_observer

classification:
  domain: workspace
  subdomain: casefile
  capability: create
  complexity: composite
  maturity: experimental
  integration_tier: internal

parameters:
  - name: title
    type: string
    required: true
    description: Primary title for the new casefile.
  - name: description
    type: string
    required: false
    description: Optional textual description for the casefile.
    default: ""
  - name: tags
    type: array
    items: string
    required: false
    description: Casefile tags used for categorization.
    default: []
  - name: auto_start_session
    type: boolean
    required: false
    description: Whether to automatically start a tool session after casefile creation.
    default: true
  - name: session_title
    type: string
    required: false
    description: Optional explicit title for the session when auto starting.
    default: ""
  - name: hook_channels
    type: array
    items: string
    required: false
    description: Hook identifiers to activate during workflow execution.
    default:
      - metrics
      - audit

implementation:
  type: api_call
  api_call:
    method_name: execute_casefile_with_session
    service: RequestHubService
    request_mapping:
      operation: "workspace.casefile.create_casefile_with_session"
      request_id: "{{ request_id }}"
      session_id: "{{ session.session_id }}"
      user_id: "{{ session.user_id }}"
      context_requirements:
        - session
        - casefile
      hooks: "{{ hook_channels }}"
      policy_hints:
        pattern: "tool_session_observer"
      metadata:
        parent_tool: "request_hub_create_casefile_with_session"
      payload:
        title: "{{ title }}"
        description: "{{ description }}"
        tags: "{{ tags }}"
        auto_start_session: "{{ auto_start_session }}"
        session_title: "{{ session_title }}"
        hook_channels: "{{ hook_channels }}"

returns:
  type: object
  description: Identifiers for the casefile and optional session along with hook results.
  properties:
    casefile_id:
      type: string
      description: Identifier of the created casefile.
    session_id:
      type: string
      nullable: true
      description: Identifier of the created tool session when auto_start_session is true.
    hooks_executed:
      type: array
      items: string
      description: List of hooks that executed during the workflow.
    status:
      type: string
      description: Request status returned by RequestHub.
  required:
    - casefile_id
    - status

session_policies:
  requires_active_session: false
  allow_new_session: true
  allow_session_resume: true
  session_event_type: workflow
  log_request_payload: true
  log_full_response: true

casefile_policies:
  requires_casefile: false
  create_if_missing: false
  enforce_access_control: true

metrics:
  emit_metrics: true
  tags:
    - request_hub
    - composite

hooks:
  default_channels:
    - metrics
    - audit

audit_events:
  success_event: request_hub_casefile_with_session_created
  failure_event: request_hub_casefile_with_session_failed
  log_response_fields:
    - casefile_id
    - session_id
    - status
  emit_casefile_event: true

examples:
  - description: Create a casefile and automatically start a session.
    context:
      session:
        user_id: "user_demo"
        session_id: "session_demo"
      permissions:
        - casefiles:write
        - tool_sessions:write
    input:
      title: "Composite Workflow"
      auto_start_session: true
    expected_output:
      status: "COMPLETED"
      hooks_executed:
        - metrics
        - audit
      session_id: "session_generated"

  - description: Create casefile without starting a session.
    context:
      session:
        user_id: "user_demo"
        session_id: "session_demo"
      permissions:
        - casefiles:write
    input:
      title: "Casefile Only"
      auto_start_session: false
    expected_output:
      status: "COMPLETED"
      session_id: null

documentation:
  summary: |
    Runs the composite RequestHub workflow that creates a casefile and optionally spins up
    a tool session, wiring hook execution and policy defaults in one call.
  usage: |
    Provide a casefile title and choose whether to auto start a session. Hook channels default
    to metrics and audit but can be extended in the request payload.

test_scenarios:
  happy_paths:
    - name: create_casefile_and_session
      description: Execute composite workflow with auto session start.
      environment: valid_user_session
      input:
        title: "Composite Flow"
        auto_start_session: true
      expected:
        status: "COMPLETED"
        requires_session_id: true
    - name: create_casefile_only
      description: Execute composite workflow without starting session.
      environment: valid_user_session
      input:
        title: "Casefile Alone"
        auto_start_session: false
      expected:
        status: "COMPLETED"
        session_id: null
  unhappy_paths:
    - name: missing_permissions
      description: Expect permission failure when tool session permission is absent while auto starting.
      environment: limited_permissions_user
      input:
        title: "Should Fail"
        auto_start_session: true
      expected_error:
        type: PermissionError
        message_contains: "tool_sessions:write"

