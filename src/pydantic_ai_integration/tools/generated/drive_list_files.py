"""Auto-generated tool: drive_list_files

Generated from: config/tools/drive_list_files.yaml
DO NOT EDIT THIS FILE MANUALLY - Changes will be overwritten

This tool is part of the pydantic_ai_integration tool engineering foundation.
It was generated by the Tool Factory and automatically registered with MANAGED_TOOLS.
"""
from pydantic import BaseModel, Field
from typing import Dict, Any, Optional
from ...tool_decorator import register_mds_tool
from ...dependencies import MDSContext


class DrivelistfilesParams(BaseModel):
    """Parameters for drive_list_files.
    
    List files in user's Google Drive with optional filtering and pagination
    """
    page_size: Optional[int] = Field(
25,
ge=1,le=1000,        description="Maximum number of files to return per page"
    )
    query: Optional[str] = Field(
'',
max_length=4096,        description="Drive query string using Drive API query syntax (e.g. name contains 'report', mimeType = 'application/pdf')"
    )
    order_by: Optional[str] = Field(
'',
        description="Sort order (e.g. 'modifiedTime desc', 'name', 'createdTime')"
    )
    page_token: Optional[str] = Field(
'',
        description="Token for fetching the next page of results"
    )

    class Config:
        json_schema_extra = {
            "examples": [
                {
                    "page_size": 10,                    "query": '',                    "order_by": 'modifiedTime desc',                    "page_token": ''                }
            ]
        }


@register_mds_tool(
    name="drive_list_files",
    display_name="Drive List Files",
    description="List files in user's Google Drive with optional filtering and pagination",
    category="google_workspace",
    version="1.0.0",
    tags=['drive', 'files', 'google_workspace', 'storage'],
    enabled=True,
    requires_auth=True,
    required_permissions=['drive.readonly'],
    requires_casefile=False,
    timeout_seconds=30,
    params_model=DrivelistfilesParams,
    session_policies={'requires_active_session': True, 'allow_new_session': False, 'allow_session_resume': True, 'session_event_type': 'drive_list', 'log_request_payload': True, 'log_full_response': False},
    casefile_policies={'requires_casefile': False, 'allowed_casefile_states': ['active'], 'create_if_missing': False, 'enforce_access_control': True, 'audit_casefile_changes': False},
    audit_config={'success_event': 'drive_list_success', 'failure_event': 'drive_list_failure', 'log_response_fields': ['file_count'], 'redact_fields': [], 'emit_casefile_event': True},
)
async def drive_list_files(
    ctx: MDSContext,
    page_size: int = 25,    query: str = '',    order_by: str = '',    page_token: str = '') -> Dict[str, Any]:
    """List files in user's Google Drive with optional filtering and pagination
    
    Args:
        ctx: MDSContext with user_id, session_id, etc.
        page_size: Maximum number of files to return per page
        query: Drive query string using Drive API query syntax (e.g. name contains 'report', mimeType = 'application/pdf')
        order_by: Sort order (e.g. 'modifiedTime desc', 'name', 'createdTime')
        page_token: Token for fetching the next page of results
    
    Returns:
        Dict containing execution results
    """
    # Register event for audit trail
    event_id = ctx.register_event(
        "drive_list_files",
        {
            "page_size": page_size,            "query": query,            "order_by": order_by,            "page_token": page_token        }
    )
    
    # Placeholder for api_call implementation
    result = {
        "tool": "drive_list_files",
        "status": "success",
        "implementation_type": "api_call",
        "page_size": page_size,        "query": query,        "order_by": order_by,        "page_token": page_token    }
    
    # Update audit trail
    if ctx.tool_events:
        last_event = ctx.tool_events[-1]
        last_event.result_summary = {
            "status": "success",
            "result_preview": str(result)[:100]
        }
        last_event.status = "success"
    
    return result